services:
    nginx:
        image: nginx:alpine
        ports:
            - "${NGINX_HTTP_PORT:-80}:80"
            - "${NGINX_HTTPS_PORT:-443}:443"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            - ./docker/nginx/cert:/etc/nginx/cert:ro
            - ./docker/nginx/pwd/.htpasswd:/etc/nginx/.htpasswd:ro
        environment:
            - TZ=Europe/Moscow
        networks:
            - common

    php:
        build:
            context: ..
            dockerfile: docker/php/Dockerfile
            target: api
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        networks:
            - common
        depends_on:
            - redis
        environment:
            TZ: Europe/Moscow

    redis:
        image: redis:alpine
        volumes:
            - redis_data:/data
        networks:
            - common
        environment:
            TZ: Europe/Moscow

    worker:
        profiles: [queue]
        build:
            context: ..
            dockerfile: docker/php/Dockerfile
            target: worker
        volumes:
            - ./src:/var/www
        restart: unless-stopped

    mysql:
        image: mysql:8
        profiles: [database]
        platform: linux/amd64
        ports:
            - "${MYSQL_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: rootpassword
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: laravelpassword
            TZ: Europe/Moscow
        volumes:
            - mysql:/var/lib/mysql
        networks:
            - common

    websocket:
        build:
            context: ..
            dockerfile: docker/php/Dockerfile
            target: websocket
        volumes:
            - ./src:/var/www/html
        ports:
            - "${WS_PORT:-80}:8080"
        depends_on:
            - redis
        restart: unless-stopped

volumes:
    mysql:
    redis_data:

networks:
    common:
        name: ${DOCKER_NETWORK_NAME:-common}
        driver: bridge
